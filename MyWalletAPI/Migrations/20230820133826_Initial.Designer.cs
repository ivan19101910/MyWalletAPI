// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWalletAPI.DbContexts;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyWalletAPI.Migrations
{
    [DbContext(typeof(MyWalletApiDbContext))]
    [Migration("20230820133826_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyWalletAPI.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Name = "Ivan"
                        },
                        new
                        {
                            Id = new Guid("bdc62598-9d2c-4237-9120-14dfd5ef8ad3"),
                            Name = "Roman"
                        },
                        new
                        {
                            Id = new Guid("4544bea6-670c-4006-8801-8a056647f049"),
                            Name = "Dmytro"
                        });
                });

            modelBuilder.Entity("MyWalletAPI.Models.Icon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Icons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Url = "https://ibb.co/Y06rfps"
                        },
                        new
                        {
                            Id = 2,
                            Url = "https://ibb.co/dB3ty5W"
                        });
                });

            modelBuilder.Entity("MyWalletAPI.Models.PointsStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<double>("ChangeAmount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("TotalNumber")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("PointsStatistics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = new Guid("bdc62598-9d2c-4237-9120-14dfd5ef8ad3"),
                            ChangeAmount = 0.0,
                            CreatedDateTime = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 10.0
                        },
                        new
                        {
                            Id = 2,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 10.0,
                            CreatedDateTime = new DateTime(2023, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 3,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 5.0,
                            CreatedDateTime = new DateTime(2023, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 4,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 0.0,
                            CreatedDateTime = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 5,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 0.0,
                            CreatedDateTime = new DateTime(2023, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 6,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 0.0,
                            CreatedDateTime = new DateTime(2023, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 7,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 0.0,
                            CreatedDateTime = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 8,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 0.0,
                            CreatedDateTime = new DateTime(2023, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 9,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 0.0,
                            CreatedDateTime = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 10,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 0.0,
                            CreatedDateTime = new DateTime(2023, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 11,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 0.0,
                            CreatedDateTime = new DateTime(2023, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 500.0
                        },
                        new
                        {
                            Id = 12,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            ChangeAmount = 5.0,
                            CreatedDateTime = new DateTime(2023, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumber = 505.0
                        });
                });

            modelBuilder.Entity("MyWalletAPI.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<Guid?>("AuthorizedAccountId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IconId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPending")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AuthorizedAccountId");

                    b.HasIndex("IconId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = true,
                            Name = "Amazon",
                            TransactionType = 0
                        },
                        new
                        {
                            Id = 2,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 2,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 0
                        },
                        new
                        {
                            Id = 3,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 4,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 5,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            AuthorizedAccountId = new Guid("bdc62598-9d2c-4237-9120-14dfd5ef8ad3"),
                            Date = new DateTime(2023, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 6,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 7,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 8,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            AuthorizedAccountId = new Guid("bdc62598-9d2c-4237-9120-14dfd5ef8ad3"),
                            Date = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 9,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 0
                        },
                        new
                        {
                            Id = 10,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 11,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 12,
                            AccountId = new Guid("b6dd6eaf-bcc6-4007-8c9d-d47f21f6a6ac"),
                            Amount = 500,
                            Date = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Time earth spent misery had the seemed for yet it",
                            IconId = 1,
                            IsPending = false,
                            Name = "Amazon",
                            TransactionType = 0
                        });
                });

            modelBuilder.Entity("MyWalletAPI.Models.PointsStatistic", b =>
                {
                    b.HasOne("MyWalletAPI.Models.Account", "Account")
                        .WithMany("PointsStatistics")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MyWalletAPI.Models.Transaction", b =>
                {
                    b.HasOne("MyWalletAPI.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWalletAPI.Models.Account", "AuthorizedAccount")
                        .WithMany()
                        .HasForeignKey("AuthorizedAccountId");

                    b.HasOne("MyWalletAPI.Models.Icon", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AuthorizedAccount");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("MyWalletAPI.Models.Account", b =>
                {
                    b.Navigation("PointsStatistics");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
